{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/neutron/.vscode-oss/extensions/extensions.json","path":"/home/neutron/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1705588184061,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.85.1","productDate":"2023-12-14T20:02:29.406Z","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"github.vscode-pull-request-github","uuid":"69ddd764-339a-4ecc-97c1-9c4ece58e36d"},"manifest":{"name":"vscode-pull-request-github","displayName":"GitHub Pull Requests and Issues","description":"Pull Request and Issue Provider for GitHub","icon":"resources/icons/github_logo.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-pull-request-github"},"bugs":{"url":"https://github.com/Microsoft/vscode-pull-request-github/issues"},"enabledApiProposals":["tokenInformation","contribShareMenu","fileComments","contribCommentPeekContext","contribCommentThreadAdditionalMenu","codiconDecoration","diffCommand","contribCommentEditorActionsMenu","shareProvider","quickDiffProvider","readonlyMessage","treeViewMarkdownMessage"],"version":"0.78.1","publisher":"GitHub","engines":{"vscode":"^1.85.0"},"categories":["Other"],"extensionDependencies":["vscode.github-authentication"],"activationEvents":["onStartupFinished","onFileSystem:newIssue","onFileSystem:pr","onFileSystem:githubpr","onFileSystem:review"],"browser":"./dist/browser/extension","l10n":"./dist/browser/extension","main":"./dist/extension","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"configuration":{"type":"object","title":"GitHub Pull Requests","properties":{"githubPullRequests.pullRequestTitle":{"deprecationMessage":"The pull request title now uses the same defaults as GitHub, and can be edited before create.","type":"string","enum":["commit","branch","custom","ask"],"enumDescriptions":["Use the latest commit message","Use the branch name","Specify a custom title","Ask which of the above methods to use"],"default":"ask","description":"The title used when creating pull requests."},"githubPullRequests.pullRequestDescription":{"type":"string","enum":["template","commit","none","Copilot"],"enumDescriptions":["Use a pull request template and commit description, or just use the commit description if no templates were found","Use the latest commit message only","Do not have a default description","Generate a pull request title and description from GitHub Copilot. Requires that the GitHub Copilot extension is installed and authenticated. Will fall back to `commit` if Copilot is not set up."],"default":"template","description":"The description used when creating pull requests."},"githubPullRequests.defaultCreateOption":{"type":"string","enum":["lastUsed","create","createDraft","createAutoMerge"],"markdownEnumDescriptions":["The most recently used create option.","The pull request will be created.","The pull request will be created as a draft.","The pull request will be created with auto-merge enabled. The merge method selected will be the default for the repo or the value of `githubPullRequests.defaultMergeMethod` if set."],"default":"lastUsed","description":"The create option that the \"Create\" button will default to when creating a pull request."},"githubPullRequests.createDraft":{"type":"boolean","default":false,"deprecationMessage":"Use the setting 'githubPullRequests.defaultCreateOption' instead.","description":"Whether the \"Draft\" checkbox will be checked by default when creating a pull request."},"githubPullRequests.logLevel":{"type":"string","enum":["info","debug","off"],"default":"info","description":"Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request.","markdownDeprecationMessage":"Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command. You can set the log level for the current session and also the default log level from there."},"githubPullRequests.remotes":{"type":"array","default":["origin","upstream"],"items":{"type":"string"},"markdownDescription":"List of remotes, by name, to fetch pull requests from."},"githubPullRequests.includeRemotes":{"type":"string","enum":["default","all"],"default":"default","deprecationMessage":"The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.","description":"By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'."},"githubPullRequests.queries":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The label to display for the query in the Pull Requests tree"},"query":{"type":"string","description":"The query used for searching pull requests."}}},"scope":"resource","markdownDescription":"Specifies what queries should be used in the GitHub Pull Requests tree. All queries are made against **the currently opened repos**. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories \"Waiting For My Review\", \"Assigned To Me\" and \"Created By Me\". If you want to preserve these, make sure they are still in the array when you modify the setting.","default":[{"label":"Waiting For My Review","query":"is:open review-requested:${user}"},{"label":"Assigned To Me","query":"is:open assignee:${user}"},{"label":"Created By Me","query":"is:open author:${user}"}]},"githubPullRequests.defaultMergeMethod":{"type":"string","enum":["merge","squash","rebase"],"default":"merge","description":"The method to use when merging pull requests."},"githubPullRequests.showInSCM":{"type":"boolean","default":false,"deprecationMessage":"This setting is deprecated. Views can now be dragged to any location.","description":"When true, show GitHub Pull Requests within the SCM viewlet. Otherwise show a separate view container for them."},"githubPullRequests.notifications":{"type":"string","enum":["pullRequests","off"],"default":"off","description":"If GitHub notifications should be shown to the user."},"githubPullRequests.fileListLayout":{"type":"string","enum":["flat","tree"],"default":"tree","description":"The layout to use when displaying changed files list."},"githubPullRequests.defaultDeletionMethod.selectLocalBranch":{"type":"boolean","default":true,"description":"When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request."},"githubPullRequests.defaultDeletionMethod.selectRemote":{"type":"boolean","default":true,"description":"When true, the option to delete the remote will be selected by default when deleting a branch from a pull request."},"githubPullRequests.terminalLinksHandler":{"type":"string","enum":["github","vscode","ask"],"enumDescriptions":["Create the pull request on GitHub","Create the pull request in VS Code","Ask which method to use"],"default":"ask","description":"Default handler for terminal links."},"githubPullRequests.createOnPublishBranch":{"type":"string","enum":["never","ask"],"enumDescriptions":["Never create a pull request when a branch is published.","Ask if you want to create a pull request when a branch is published."],"default":"ask","description":"Create a pull request when a branch is published."},"githubPullRequests.commentExpandState":{"type":"string","enum":["expandUnresolved","collapseAll"],"enumDescriptions":["All unresolved comments will be expanded.","All comments will be collapsed"],"default":"expandUnresolved","description":"Controls whether comments are expanded when a document with comments is opened."},"githubPullRequests.useReviewMode":{"type":"object","description":"Choose which pull request states will use review mode. \"Open\" pull requests will always use review mode.","additionalProperties":false,"properties":{"merged":{"type":"boolean","description":"Use review mode for merged pull requests.","default":false},"closed":{"type":"boolean","description":"Use review mode for closed pull requests. Merged pull requests are not considered \"closed\".","default":false}},"required":["merged","closed"],"default":{"merged":false,"closed":false}},"githubPullRequests.assignCreated":{"type":"string","description":"All pull requests created with this extension will be assigned to this user. To assign to yourself, use the '${user}' variable."},"githubPullRequests.pushBranch":{"type":"string","enum":["prompt","always"],"default":"prompt","enumDescriptions":["Prompt to push the branch when creating a PR and the \"from\" branch is not available on the remote.","Always push the branch when creating a PR and the \"from\" branch is not available on the remote."],"description":"Push the \"from\" branch when creating a PR and the \"from\" branch is not available on the remote."},"githubPullRequests.pullBranch":{"type":"string","enum":["prompt","never","always"],"default":"prompt","markdownEnumDescriptions":["Prompt to pull a PR branch when changes are detected in the PR.","Never pull a PR branch when changes are detected in the PR.","Always pull a PR branch when changes are detected in the PR. When `\"git.autoStash\": true` this will instead `prompt` to prevent unexpected file changes."],"description":"Pull changes from the remote when a PR branch is checked out locally. Changes are detected when the PR is manually refreshed and during periodic background updates."},"githubPullRequests.allowFetch":{"type":"boolean","default":true,"description":"Allows `git fetch` to be run for checked-out pull request branches when checking for updates to the pull request."},"githubPullRequests.ignoredPullRequestBranches":{"type":"array","default":[],"items":{"type":"string","description":"Branch name"},"description":"Prevents branches that are associated with a pull request from being automatically detected. This will prevent review mode from being entered on these branches."},"githubPullRequests.neverIgnoreDefaultBranch":{"type":"boolean","description":"Never offer to ignore a pull request associated with the default branch of a repository."},"githubPullRequests.overrideDefaultBranch":{"type":"string","description":"The default branch for a repository is set on github.com. With this setting, you can override that default with another branch."},"githubPullRequests.postCreate":{"type":"string","enum":["none","openOverview","checkoutDefaultBranch","checkoutDefaultBranchAndShow","checkoutDefaultBranchAndCopy"],"description":"The action to take after creating a pull request.","default":"openOverview","enumDescriptions":["No action","Open the overview page of the pull request","Checkout the default branch of the repository","Checkout the default branch of the repository and show the pull request in the Pull Requests view","Checkout the default branch of the repository and copy a link to the pull request to the clipboard"]},"githubPullRequests.defaultCommentType":{"type":"string","enum":["single","review"],"default":"single","description":"The default comment type to use when submitting a comment and there is no active review","enumDescriptions":["Submits the comment as a single comment that will be immediately visible to other users","Submits the comment as a review comment that will be visible to other users once the review is submitted"]},"githubPullRequests.quickDiff":{"type":"boolean","description":"Enables quick diff in the editor gutter for checked-out pull requests. Requires a reload to take effect","default":false},"githubPullRequests.setAutoMerge":{"type":"boolean","description":"Checks the \"Auto-merge\" checkbox in the \"Create Pull Request\" view.","deprecationMessage":"Use the setting 'githubPullRequests.defaultCreateOption' instead.","default":false},"githubPullRequests.pullPullRequestBranchBeforeCheckout":{"type":"boolean","description":"Pulls pull request before checkout","default":true},"githubPullRequests.upstreamRemote":{"type":"string","enum":["add","never"],"markdownDescription":"Controls whether an `upstream` remote is automatically added for forks","markdownEnumDescriptions":["An `upstream` remote will be automatically added for forks","An `upstream` remote will never be automatically added for forks"],"default":"add"},"githubIssues.ignoreMilestones":{"type":"array","default":[],"description":"An array of milestones titles to never show issues from."},"githubIssues.createIssueTriggers":{"type":"array","items":{"type":"string","description":"String that enables the 'Create issue from comment' code action. Should not contain whitespace."},"default":["TODO","todo","BUG","FIXME","ISSUE","HACK"],"description":"Strings that will cause the 'Create issue from comment' code action to show."},"githubIssues.createInsertFormat":{"type":"string","enum":["number","url"],"default":"number","description":"Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run."},"githubIssues.issueCompletions.enabled":{"type":"boolean","default":true,"description":"Controls whether completion suggestions are shown for issues."},"githubIssues.userCompletions.enabled":{"type":"boolean","default":true,"description":"Controls whether completion suggestions are shown for users."},"githubIssues.ignoreCompletionTrigger":{"type":"array","items":{"type":"string","description":"Language that issue completions should not trigger on '#'."},"default":["coffeescript","diff","dockerfile","dockercompose","ignore","ini","julia","makefile","perl","powershell","python","r","ruby","shellscript","yaml"],"description":"Languages that the '#' character should not be used to trigger issue completion suggestions."},"githubIssues.ignoreUserCompletionTrigger":{"type":"array","items":{"type":"string","description":"Language that user completions should not trigger on '@'."},"default":["python"],"description":"Languages that the '@' character should not be used to trigger user completion suggestions."},"githubIssues.issueBranchTitle":{"type":"string","default":"${user}/issue${issueNumber}","markdownDescription":"Advanced settings for the name of the branch that is created when you start working on an issue. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${sanitizedIssueTitle}` will be replaced with the issue title, with all spaces and unsupported characters (https://git-scm.com/docs/git-check-ref-format) removed"},"githubIssues.useBranchForIssues":{"type":"string","enum":["on","off","prompt"],"enumDescriptions":["A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.","A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.","A prompt will show for setting the name of the branch that will be created and checked out."],"default":"on","markdownDescription":"Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `#githubIssues.issueBranchTitle#`."},"githubIssues.issueCompletionFormatScm":{"type":"string","default":"${issueTitle} ${issueNumberLabel}","markdownDescription":"Sets the format of issue completions in the SCM inputbox. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${issueNumberLabel}` will be replaced with a label formatted as #number or owner/repository#number, depending on whether the issue is in the current repository"},"githubIssues.workingIssueFormatScm":{"type":"string","default":"${issueTitle} \nFixes ${issueNumberLabel}","markdownDescription":"Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to `${issueTitle} \nFixes #${issueNumber}`","editPresentation":"multilineText"},"githubIssues.queries":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The label to display for the query in the Issues tree."},"query":{"type":"string","markdownDescription":"The search query using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The variable `${user}` can be used to specify the logged in user within a search. `${owner}` and `${repository}` can be used to specify the repository by using `repo:${owner}/${repository}`."}}},"scope":"resource","markdownDescription":"Specifies what queries should be used in the GitHub issues tree using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The first query listed will be expanded in the Issues view. The \"default\" query includes issues assigned to you by Milestone. If you want to preserve these, make sure they are still in the array when you modify the setting.","default":[{"label":"My Issues","query":"default"},{"label":"Created Issues","query":"author:${user} state:open repo:${owner}/${repository} sort:created-desc"},{"label":"Recent Issues","query":"state:open repo:${owner}/${repository} sort:updated-desc"}]},"githubIssues.assignWhenWorking":{"type":"boolean","default":true,"description":"Assigns the issue you're working on to you. Only applies when the issue you're working on is in a repo you currently have open."},"githubPullRequests.focusedMode":{"properties":{"oneOf":[{"type":"boolean"},{"type":"string"}]},"enum":["firstDiff","overview","multiDiff",false],"default":"firstDiff","description":"The layout to use when a pull request is checked out. Set to false to prevent layout changes."},"githubPullRequests.showPullRequestNumberInTree":{"type":"boolean","default":false,"description":"Shows the pull request number in the tree view."}}},"viewsContainers":{"activitybar":[{"id":"github-pull-requests","title":"GitHub","icon":"$(github)"},{"id":"github-pull-request","title":"GitHub Pull Request","icon":"$(git-pull-request)"}]},"views":{"github-pull-requests":[{"id":"github:login","name":"Login","when":"ReposManagerStateContext == NeedsAuthentication","icon":"$(git-pull-request)"},{"id":"pr:github","name":"Pull Requests","when":"ReposManagerStateContext != NeedsAuthentication","icon":"$(git-pull-request)"},{"id":"issues:github","name":"Issues","when":"ReposManagerStateContext != NeedsAuthentication","icon":"$(issues)"}],"github-pull-request":[{"id":"github:createPullRequestWebview","type":"webview","name":"Create","when":"github:createPullRequest","visibility":"visible","initialSize":2},{"id":"github:compareChangesFiles","name":"Files Changed","when":"github:createPullRequest","visibility":"visible","initialSize":1},{"id":"github:compareChangesCommits","name":"Commits","when":"github:createPullRequest","visibility":"visible","initialSize":1},{"id":"prStatus:github","name":"Changes In Pull Request","when":"github:inReviewMode && !github:createPullRequest","icon":"$(git-pull-request)","visibility":"visible","initialSize":3},{"id":"github:activePullRequest","type":"webview","name":"Active Pull Request","when":"github:inReviewMode && github:focusedReview && !github:createPullRequest && github:activePRCount <= 1","initialSize":2},{"id":"github:activePullRequest:welcome","name":"Active Pull Request","when":"!github:stateValidated && github:focusedReview"}]},"commands":[{"command":"github.api.preloadPullRequest","title":"Preload Pull Request","category":"GitHub Pull Requests"},{"command":"pr.create","title":"Create Pull Request","icon":"$(git-pull-request-create)","category":"GitHub Pull Requests"},{"command":"pr.pushAndCreate","title":"Create Pull Request","icon":"$(git-pull-request-create)","category":"GitHub Pull Requests"},{"command":"pr.pick","title":"Checkout Pull Request","category":"GitHub Pull Requests","icon":"$(arrow-right)"},{"command":"pr.openChanges","title":"Open Changes","category":"GitHub Pull Requests","icon":"$(diff-multiple)"},{"command":"pr.pickOnVscodeDev","title":"Checkout Pull Request on vscode.dev","category":"GitHub Pull Requests","icon":"$(globe)"},{"command":"pr.exit","title":"Checkout Default Branch","category":"GitHub Pull Requests"},{"command":"pr.dismissNotification","title":"Dismiss Notification","category":"GitHub Pull Requests"},{"command":"pr.merge","title":"Merge Pull Request","category":"GitHub Pull Requests"},{"command":"pr.readyForReview","title":"Mark Pull Request Ready For Review","category":"GitHub Pull Requests"},{"command":"pr.close","title":"Close Pull Request","category":"GitHub Pull Requests"},{"command":"pr.openPullRequestOnGitHub","title":"Open Pull Request on GitHub","category":"GitHub Pull Requests","icon":"$(globe)"},{"command":"pr.openAllDiffs","title":"Open All Diffs","category":"GitHub Pull Requests"},{"command":"pr.refreshPullRequest","title":"Refresh Pull Request","category":"GitHub Pull Requests"},{"command":"pr.openFileOnGitHub","title":"Open File on GitHub","category":"GitHub Pull Requests"},{"command":"pr.copyCommitHash","title":"Copy Commit Hash","category":"GitHub Pull Requests"},{"command":"pr.openOriginalFile","title":"Open Original File","category":"GitHub Pull Requests"},{"command":"pr.openModifiedFile","title":"Open Modified File","category":"GitHub Pull Requests"},{"command":"pr.openDiffView","title":"Open Diff View","category":"GitHub Pull Requests","icon":"$(compare-changes)"},{"command":"pr.openDiffViewFromEditor","title":"Open Pull Request Diff View","category":"GitHub Pull Requests","icon":"$(git-pull-request)"},{"command":"pr.openDescription","title":"View Pull Request Description","category":"GitHub Pull Requests","when":"github:inReviewMode","icon":"$(note)"},{"command":"pr.openDescriptionToTheSide","title":"Open Pull Request Description to the Side","icon":"$(split-horizontal)"},{"command":"pr.refreshDescription","title":"Refresh Pull Request Description","category":"GitHub Pull Requests"},{"command":"pr.showDiffSinceLastReview","title":"Show Changes Since Last Review","icon":"$(git-pull-request-new-changes)"},{"command":"pr.showDiffAll","title":"Show All Changes","icon":"$(git-pull-request-go-to-changes)"},{"command":"pr.checkoutByNumber","title":"Checkout Pull Request by Number","category":"GitHub Pull Requests","icon":"$(symbol-numeric)"},{"command":"review.openFile","title":"Open File","icon":"$(go-to-file)"},{"command":"review.openLocalFile","title":"Open File","icon":"$(go-to-file)"},{"command":"review.suggestDiff","title":"Suggest Edit","category":"GitHub Pull Requests"},{"command":"pr.refreshList","title":"Refresh Pull Requests List","icon":"$(refresh)","category":"GitHub Pull Requests"},{"command":"pr.setFileListLayoutAsTree","title":"View as Tree","icon":"$(list-tree)","category":"GitHub Pull Requests"},{"command":"pr.setFileListLayoutAsFlat","title":"View as List","icon":"$(list-flat)","category":"GitHub Pull Requests"},{"command":"pr.refreshChanges","title":"Refresh","icon":"$(refresh)","category":"GitHub Pull Requests"},{"command":"pr.configurePRViewlet","title":"Configure...","category":"GitHub Pull Requests","icon":"$(gear)"},{"command":"pr.deleteLocalBranch","title":"Delete Local Branch","category":"GitHub Pull Requests"},{"command":"pr.signin","title":"Sign in to GitHub","category":"GitHub Pull Requests"},{"command":"pr.signinNoEnterprise","title":"Sign in to GitHub","category":"GitHub Pull Requests"},{"command":"pr.signinenterprise","title":"Sign in to GitHub Enterprise","category":"GitHub Pull Requests"},{"command":"pr.deleteLocalBranchesNRemotes","title":"Delete local branches and remotes","category":"GitHub Pull Requests"},{"command":"pr.createComment","title":"Add Review Comment","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.createSingleComment","title":"Add Comment","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.makeSuggestion","title":"Make a Suggestion","category":"GitHub Pull Requests"},{"command":"pr.startReview","title":"Start Review","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.editComment","title":"Edit Comment","category":"GitHub Pull Requests","icon":"$(edit)","enablement":"!(comment =~ /temporary/)"},{"command":"pr.cancelEditComment","title":"Cancel","category":"GitHub Pull Requests"},{"command":"pr.saveComment","title":"Save","category":"GitHub Pull Requests","enablement":"!commentIsEmpty"},{"command":"pr.deleteComment","title":"Delete Comment","category":"GitHub Pull Requests","icon":"$(trash)","enablement":"!(comment =~ /temporary/)"},{"command":"pr.resolveReviewThread","title":"Resolve Conversation","category":"GitHub Pull Requests"},{"command":"pr.unresolveReviewThread","title":"Unresolve Conversation","category":"GitHub Pull Requests"},{"command":"pr.signinAndRefreshList","title":"Sign in and Refresh","category":"GitHub Pull Requests"},{"command":"pr.configureRemotes","title":"Configure Remotes...","category":"GitHub Pull Requests"},{"command":"pr.refreshActivePullRequest","title":"Refresh","category":"GitHub Pull Requests","icon":"$(refresh)"},{"command":"pr.markFileAsViewed","title":"Mark File As Viewed","category":"GitHub Pull Requests","icon":"$(pass)"},{"command":"pr.unmarkFileAsViewed","title":"Mark File As Not Viewed","category":"GitHub Pull Requests","icon":"$(pass-filled)"},{"command":"pr.openReview","title":"Go to Review","category":"GitHub Pull Requests"},{"command":"pr.collapseAllComments","title":"Collapse All Comments","category":"Comments","icon":"$(collapse-all)"},{"command":"pr.editQuery","title":"Edit Query","category":"GitHub Pull Requests","icon":"$(edit)"},{"command":"pr.openPullsWebsite","title":"Open on GitHub","category":"GitHub Pull Requests","icon":"$(globe)"},{"command":"pr.resetViewedFiles","title":"Reset Viewed Files","category":"GitHub Pull Requests"},{"command":"pr.goToNextDiffInPr","title":"Go to Next Diff in Pull Request","category":"GitHub Pull Requests"},{"command":"pr.goToPreviousDiffInPr","title":"Go to Previous Diff in Pull Request","category":"GitHub Pull Requests"},{"command":"pr.copyCommentLink","title":"Copy Comment Link","category":"GitHub Pull Requests","icon":"$(copy)","enablement":"!(comment =~ /temporary/)"},{"command":"pr.applySuggestion","title":"Apply Suggestion","category":"GitHub Pull Requests","icon":"$(gift)"},{"command":"pr.addAssigneesToNewPr","title":"Add Assignees","category":"GitHub Pull Requests","icon":"$(account)"},{"command":"pr.addReviewersToNewPr","title":"Add Reviewers","category":"GitHub Pull Requests","icon":"$(feedback)"},{"command":"pr.addLabelsToNewPr","title":"Apply Labels","category":"GitHub Pull Requests","icon":"$(tag)"},{"command":"pr.addMilestoneToNewPr","title":"Set Milestone","category":"GitHub Pull Requests","icon":"$(milestone)"},{"command":"pr.addFileComment","title":"Add File Comment","category":"GitHub Pull Requests","icon":"$(comment)"},{"command":"pr.checkoutFromReadonlyFile","title":"Checkout Pull Request","category":"GitHub Pull Requests"},{"command":"review.diffWithPrHead","title":"Compare Base With Pull Request Head (readonly)","category":"GitHub Pull Requests"},{"command":"review.diffLocalWithPrHead","title":"Compare Pull Request Head with Local","category":"GitHub Pull Requests"},{"command":"review.approve","title":"Approve","category":"GitHub Pull Requests"},{"command":"review.comment","title":"Comment","category":"GitHub Pull Requests"},{"command":"review.requestChanges","title":"Request Changes","category":"GitHub Pull Requests"},{"command":"review.approveOnDotCom","title":"Approve on github.com","category":"GitHub Pull Requests"},{"command":"review.requestChangesOnDotCom","title":"Request changes on github.com","category":"GitHub Pull Requests"},{"command":"review.approveDescription","title":"Approve","category":"GitHub Pull Requests"},{"command":"review.commentDescription","title":"Comment","category":"GitHub Pull Requests"},{"command":"review.requestChangesDescription","title":"Request Changes","category":"GitHub Pull Requests"},{"command":"review.approveOnDotComDescription","title":"Approve on github.com","category":"GitHub Pull Requests"},{"command":"review.requestChangesOnDotComDescription","title":"Request changes on github.com","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuCreate","title":"Create","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuDraft","title":"Create Draft","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuMergeWhenReady","title":"Create + Merge When Ready","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuMerge","title":"Create + Auto-Merge","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuSquash","title":"Create + Auto-Squash","category":"GitHub Pull Requests"},{"command":"pr.createPrMenuRebase","title":"Create + Auto-Rebase","category":"GitHub Pull Requests"},{"command":"issue.createIssueFromSelection","title":"Create Issue From Selection","category":"GitHub Issues"},{"command":"issue.createIssueFromClipboard","title":"Create Issue From Clipboard","category":"GitHub Issues"},{"command":"pr.copyVscodeDevPrLink","title":"Copy vscode.dev Pull Request Link","category":"GitHub Issues"},{"command":"pr.refreshComments","title":"Refresh Pull Request Comments","category":"GitHub Pull Requests","icon":"$(refresh)"},{"command":"issue.copyGithubDevLinkWithoutRange","title":"Copy github.dev Link","category":"GitHub Issues"},{"command":"issue.copyGithubDevLinkFile","title":"Copy github.dev Link","category":"GitHub Issues"},{"command":"issue.copyGithubDevLink","title":"Copy github.dev Link","category":"GitHub Issues"},{"command":"issue.copyGithubPermalink","title":"Copy GitHub Permalink","category":"GitHub Issues"},{"command":"issue.copyGithubHeadLink","title":"Copy GitHub Head Link","category":"GitHub Issues"},{"command":"issue.copyGithubPermalinkWithoutRange","title":"Copy GitHub Permalink","category":"GitHub Issues"},{"command":"issue.copyGithubHeadLinkWithoutRange","title":"Copy GitHub Head Link","category":"GitHub Issues"},{"command":"issue.copyMarkdownGithubPermalink","title":"Copy GitHub Permalink as Markdown","category":"GitHub Issues"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","title":"Copy GitHub Permalink as Markdown","category":"GitHub Issues"},{"command":"issue.openGithubPermalink","title":"Open Permalink on GitHub","category":"GitHub Issues"},{"command":"issue.openIssue","title":"Open Issue on GitHub","category":"GitHub Issues","icon":"$(globe)"},{"command":"issue.copyIssueNumber","title":"Copy Issue Number","category":"GitHub Issues"},{"command":"issue.copyIssueUrl","title":"Copy Issue Link","category":"GitHub Issues"},{"command":"issue.refresh","title":"Refresh","category":"GitHub Issues","icon":"$(refresh)"},{"command":"issue.suggestRefresh","title":"Refresh Suggestions","category":"GitHub Issues"},{"command":"issue.startWorking","title":"Start Working on Issue","category":"GitHub Issues","icon":"$(arrow-right)"},{"command":"issue.startWorkingBranchDescriptiveTitle","title":"Start Working on Issue and Checkout Topic Branch","category":"GitHub Issues","icon":"$(arrow-right)"},{"command":"issue.continueWorking","title":"Continue Working on Issue","category":"GitHub Issues","icon":"$(arrow-right)"},{"command":"issue.startWorkingBranchPrompt","title":"Start Working and Set Branch...","category":"GitHub Issues"},{"command":"issue.stopWorking","title":"Stop Working on Issue","category":"GitHub Issues","icon":"$(primitive-square)"},{"command":"issue.stopWorkingBranchDescriptiveTitle","title":"Stop Working on Issue and Leave Topic Branch","category":"GitHub Issues","icon":"$(primitive-square)"},{"command":"issue.statusBar","title":"Current Issue Options","category":"GitHub Issues"},{"command":"issue.getCurrent","title":"Get current issue","category":"GitHub Issues"},{"command":"issue.editQuery","title":"Edit Query","category":"GitHub Issues","icon":"$(edit)"},{"command":"issue.createIssue","title":"Create an Issue","category":"GitHub Issues","icon":"$(plus)"},{"command":"issue.createIssueFromFile","title":"Create Issue","icon":"$(check)","enablement":"!issues.creatingFromFile"},{"command":"issue.issueCompletion","title":"Issue Completion Chosen"},{"command":"issue.userCompletion","title":"User Completion Chosen"},{"command":"issue.signinAndRefreshList","title":"Sign in and Refresh","category":"GitHub Issues"},{"command":"issue.goToLinkedCode","title":"Go to Linked Code","category":"GitHub Issues"},{"command":"issues.openIssuesWebsite","title":"Open on GitHub","category":"GitHub Pull Requests","icon":"$(globe)"}],"viewsWelcome":[{"view":"github:login","when":"ReposManagerStateContext == NeedsAuthentication && github:hasGitHubRemotes","contents":"You have not yet signed in with GitHub\n[Sign in](command:pr.signin)"},{"view":"pr:github","when":"gitNotInstalled","contents":"Git is not installed or otherwise not available. Install git or fix your git installation and then reload."},{"view":"github:login","when":"ReposManagerStateContext == NeedsAuthentication && !github:hasGitHubRemotes && gitOpenRepositoryCount","contents":"You have not yet signed in with GitHub\n[Sign in](command:pr.signinNoEnterprise)"},{"view":"github:login","when":"ReposManagerStateContext == NeedsAuthentication && !github:hasGitHubRemotes && gitOpenRepositoryCount","contents":"[Sign in with GitHub Enterprise](command:pr.signinenterprise)"},{"view":"pr:github","when":"git.state != initialized && !github:initialized && workspaceFolderCount > 0","contents":"Loading..."},{"view":"pr:github","when":"workspaceFolderCount > 0 && github:loadingPrsTree","contents":"Loading..."},{"view":"pr:github","when":"workspaceFolderCount == 0","contents":"You have not yet opened a folder.\n[Open Folder](command:workbench.action.files.openFolder)"},{"view":"pr:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 0","contents":"No git repositories found"},{"view":"pr:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"pr:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount > 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"issues:github","when":"git.state != initialized && !github:initialized && workspaceFolderCount > 0","contents":"Loading..."},{"view":"issues:github","when":"workspaceFolderCount > 0 && github:loadingPrsTree","contents":"Loading..."},{"view":"issues:github","when":"workspaceFolderCount == 0","contents":"You have not yet opened a folder."},{"view":"issues:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 0","contents":"No git repositories found"},{"view":"issues:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount == 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"issues:github","when":"git.state == initialized && gitOpenRepositoryCount == 0 && workspaceFolderCount > 0 && git.parentRepositoryCount > 1","contents":"A git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders)."},{"view":"github:activePullRequest:welcome","when":"!github:stateValidated","contents":"Loading..."}],"keybindings":[{"key":"ctrl+shift+space","command":"issue.suggestRefresh","when":"suggestWidgetVisible"},{"key":"ctrl+s","mac":"cmd+s","command":"issue.createIssueFromFile","when":"resourceScheme == newIssue && config.files.autoSave != off"},{"key":"ctrl+enter","mac":"cmd+enter","command":"issue.createIssueFromFile","when":"resourceScheme == newIssue"}],"menus":{"commandPalette":[{"command":"github.api.preloadPullRequest","when":"false"},{"command":"pr.configureRemotes","when":"gitHubOpenRepositoryCount != 0"},{"command":"pr.configurePRViewlet","when":"gitHubOpenRepositoryCount != 0"},{"command":"pr.pick","when":"false"},{"command":"pr.openChanges","when":"false"},{"command":"pr.pickOnVscodeDev","when":"false"},{"command":"pr.exit","when":"github:inReviewMode"},{"command":"pr.dismissNotification","when":"false"},{"command":"pr.resetViewedFiles","when":"github:inReviewMode"},{"command":"review.openFile","when":"false"},{"command":"review.openLocalFile","when":"false"},{"command":"pr.close","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.create","when":"gitHubOpenRepositoryCount != 0 && github:authenticated"},{"command":"pr.pushAndCreate","when":"false"},{"command":"pr.merge","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.readyForReview","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.openPullRequestOnGitHub","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.openAllDiffs","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.refreshDescription","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.openFileOnGitHub","when":"false"},{"command":"pr.openOriginalFile","when":"false"},{"command":"pr.openModifiedFile","when":"false"},{"command":"pr.refreshPullRequest","when":"false"},{"command":"pr.deleteLocalBranch","when":"false"},{"command":"pr.openDiffView","when":"false"},{"command":"pr.openDiffViewFromEditor","when":"false"},{"command":"pr.openDescriptionToTheSide","when":"false"},{"command":"pr.openDescription","when":"gitHubOpenRepositoryCount != 0 && github:inReviewMode"},{"command":"pr.showDiffSinceLastReview","when":"false"},{"command":"pr.showDiffAll","when":"false"},{"command":"review.suggestDiff","when":"false"},{"command":"review.approve","when":"false"},{"command":"review.comment","when":"false"},{"command":"review.requestChanges","when":"false"},{"command":"review.approveOnDotCom","when":"false"},{"command":"review.requestChangesOnDotCom","when":"false"},{"command":"review.approveDescription","when":"false"},{"command":"review.commentDescription","when":"false"},{"command":"review.requestChangesDescription","when":"false"},{"command":"review.approveOnDotComDescription","when":"false"},{"command":"review.requestChangesOnDotComDescription","when":"false"},{"command":"pr.refreshList","when":"gitHubOpenRepositoryCount != 0 && github:authenticated && github:hasGitHubRemotes"},{"command":"pr.setFileListLayoutAsTree","when":"false"},{"command":"pr.setFileListLayoutAsFlat","when":"false"},{"command":"pr.refreshChanges","when":"false"},{"command":"pr.signin","when":"gitHubOpenRepositoryCount != 0 && github:hasGitHubRemotes"},{"command":"pr.signinNoEnterprise","when":"false"},{"command":"pr.signinenterprise","when":"gitHubOpenRepositoryCount != 0 && github:hasGitHubRemotes"},{"command":"pr.signinAndRefreshList","when":"false"},{"command":"pr.copyCommitHash","when":"false"},{"command":"pr.createComment","when":"false"},{"command":"pr.createSingleComment","when":"false"},{"command":"pr.makeSuggestion","when":"false"},{"command":"pr.startReview","when":"false"},{"command":"pr.editComment","when":"false"},{"command":"pr.cancelEditComment","when":"false"},{"command":"pr.saveComment","when":"false"},{"command":"pr.deleteComment","when":"false"},{"command":"pr.openReview","when":"false"},{"command":"pr.editQuery","when":"false"},{"command":"pr.markFileAsViewed","when":"false"},{"command":"pr.unmarkFileAsViewed","when":"false"},{"command":"pr.checkoutByNumber","when":"gitHubOpenRepositoryCount != 0 && github:initialized && github:authenticated"},{"command":"pr.collapseAllComments","when":"false"},{"command":"pr.copyVscodeDevPrLink","when":"github:inReviewMode && remoteName != codespaces && embedderIdentifier != github.dev"},{"command":"pr.goToNextDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:unviewedFiles"},{"command":"pr.goToNextDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:viewedFiles"},{"command":"pr.goToPreviousDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:unviewedFiles"},{"command":"pr.goToPreviousDiffInPr","when":"activeEditor == workbench.editors.textDiffEditor && resourcePath in github:viewedFiles"},{"command":"pr.copyCommentLink","when":"false"},{"command":"pr.addAssigneesToNewPr","when":"false"},{"command":"pr.addReviewersToNewPr","when":"false"},{"command":"pr.addLabelsToNewPr","when":"false"},{"command":"pr.addMilestoneToNewPr","when":"false"},{"command":"pr.addFileComment","when":"false"},{"command":"review.diffWithPrHead","when":"false"},{"command":"review.diffLocalWithPrHead","when":"false"},{"command":"pr.createPrMenuCreate","when":"false"},{"command":"pr.createPrMenuDraft","when":"false"},{"command":"pr.createPrMenuMergeWhenReady","when":"false"},{"command":"pr.createPrMenuMerge","when":"false"},{"command":"pr.createPrMenuSquash","when":"false"},{"command":"pr.createPrMenuRebase","when":"false"},{"command":"pr.refreshComments","when":"gitHubOpenRepositoryCount != 0"},{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.openGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.openIssue","when":"false"},{"command":"issue.copyIssueNumber","when":"false"},{"command":"issue.copyIssueUrl","when":"false"},{"command":"issue.refresh","when":"false"},{"command":"issue.suggestRefresh","when":"false"},{"command":"issue.startWorking","when":"false"},{"command":"issue.startWorkingBranchDescriptiveTitle","when":"false"},{"command":"issue.continueWorking","when":"false"},{"command":"issue.startWorkingBranchPrompt","when":"false"},{"command":"issue.stopWorking","when":"false"},{"command":"issue.stopWorkingBranchDescriptiveTitle","when":"false"},{"command":"issue.statusBar","when":"false"},{"command":"issue.getCurrent","when":"false"},{"command":"issue.editQuery","when":"false"},{"command":"issue.createIssue","when":"github:hasGitHubRemotes && github:authenticated"},{"command":"issue.createIssueFromFile","when":"false"},{"command":"issue.issueCompletion","when":"false"},{"command":"issue.userCompletion","when":"false"},{"command":"issue.signinAndRefreshList","when":"false"},{"command":"issue.goToLinkedCode","when":"false"},{"command":"issue.copyGithubDevLinkWithoutRange","when":"false"},{"command":"issue.copyGithubDevLinkFile","when":"false"},{"command":"issue.copyGithubDevLink","when":"false"},{"command":"issue.copyGithubPermalinkWithoutRange","when":"false"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","when":"false"},{"command":"issue.copyGithubHeadLinkWithoutRange","when":"false"},{"command":"pr.refreshActivePullRequest","when":"false"},{"command":"pr.openPullsWebsite","when":"github:hasGitHubRemotes"},{"command":"issues.openIssuesWebsite","when":"github:hasGitHubRemotes"}],"view/title":[{"command":"pr.create","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"navigation@1"},{"command":"pr.refreshList","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"navigation@2"},{"command":"pr.openPullsWebsite","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"overflow@1"},{"command":"pr.checkoutByNumber","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"overflow@2"},{"command":"pr.configurePRViewlet","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == pr:github","group":"overflow@3"},{"command":"pr.refreshChanges","when":"view == prStatus:github","group":"navigation@2"},{"command":"pr.setFileListLayoutAsTree","when":"view == prStatus:github && fileListLayout:flat","group":"navigation"},{"command":"pr.setFileListLayoutAsFlat","when":"view == prStatus:github && !fileListLayout:flat","group":"navigation"},{"command":"issue.createIssue","when":"view == issues:github && github:hasGitHubRemotes","group":"navigation@1"},{"command":"issue.refresh","when":"view == issues:github","group":"navigation@2"},{"command":"issues.openIssuesWebsite","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == issues:github","group":"overflow@1"},{"command":"pr.configurePRViewlet","when":"gitHubOpenRepositoryCount != 0 && github:initialized && view == issues:github","group":"overflow@2"},{"command":"pr.refreshActivePullRequest","when":"view == github:activePullRequest && github:hasGitHubRemotes","group":"navigation@1"},{"command":"pr.openDescription","when":"view == github:activePullRequest && github:hasGitHubRemotes","group":"navigation@2"},{"command":"pr.openPullRequestOnGitHub","when":"view == github:activePullRequest && github:hasGitHubRemotes","group":"navigation@3"},{"command":"pr.addAssigneesToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@1"},{"command":"pr.addReviewersToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@2"},{"command":"pr.addLabelsToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@3"},{"command":"pr.addMilestoneToNewPr","when":"view == github:createPullRequestWebview && github:createPrPermissions != READ && github:createPrPermissions","group":"navigation@4"},{"command":"pr.refreshComments","when":"view == workbench.panel.comments","group":"navigation"}],"view/item/context":[{"command":"pr.pick","when":"view == pr:github && viewItem =~ /(pullrequest(:local)?:nonactive)|(description:nonactive)/","group":"1_pullrequest@1"},{"command":"pr.pick","when":"view == pr:github && viewItem =~ /description:nonactive/","group":"inline@0"},{"command":"pr.openChanges","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description/ && config.multiDiffEditor.experimental.enabled","group":"inline@1"},{"command":"pr.showDiffSinceLastReview","group":"inline@1","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description:(active|nonactive):hasChangesSinceReview:showingAllChanges/"},{"command":"pr.showDiffAll","group":"inline@1","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description:(active|nonactive):hasChangesSinceReview:showingChangesSinceReview/"},{"command":"pr.openDescriptionToTheSide","group":"inline@2","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /description/"},{"command":"pr.exit","when":"view == pr:github && viewItem =~ /pullrequest(:local)?:active|description:active/","group":"1_pullrequest@1"},{"command":"pr.pickOnVscodeDev","when":"view == pr:github && viewItem =~ /pullrequest(:local)?:nonactive|description/ && (!isWeb || remoteName != codespaces && virtualWorkspace != vscode-vfs)","group":"1_pullrequest@2"},{"command":"pr.refreshPullRequest","when":"view == pr:github && viewItem =~ /pullrequest|description/","group":"pullrequest@1"},{"command":"pr.openPullRequestOnGitHub","when":"view == pr:github && viewItem =~ /pullrequest|description/","group":"1_pullrequest@3"},{"command":"pr.deleteLocalBranch","when":"view == pr:github && viewItem =~ /pullrequest:local:nonactive/","group":"pullrequest@4"},{"command":"pr.dismissNotification","when":"view == pr:github && viewItem =~ /pullrequest(.*):notification/","group":"pullrequest@5"},{"command":"pr.copyCommitHash","when":"view == prStatus:github && viewItem =~ /commit/"},{"command":"review.openFile","group":"inline@0","when":"openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"pr.openDiffView","group":"inline@0","when":"!openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"pr.openFileOnGitHub","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /filechange/","group":"0_open@0"},{"command":"pr.openOriginalFile","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /filechange:MODIFY/","group":"0_open@1"},{"command":"pr.openModifiedFile","when":"view =~ /(pr|prStatus):github/ && viewItem =~ /filechange:MODIFY/","group":"0_open@2"},{"command":"review.diffWithPrHead","group":"1_diff@0","when":"openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"review.diffLocalWithPrHead","group":"1_diff@1","when":"openDiffOnClick && view == prStatus:github && viewItem =~ /filechange(?!:DELETE)/"},{"command":"pr.editQuery","when":"view == pr:github && viewItem == query","group":"inline"},{"command":"pr.editQuery","when":"view == pr:github && viewItem == query"},{"command":"issue.openIssue","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"inline@2"},{"command":"issue.openIssue","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"issues_0@1"},{"command":"issue.goToLinkedCode","when":"view == issues:github && viewItem =~ /^link(current|continue)?issue/","group":"issues_0@0"},{"command":"issue.startWorking","when":"view == issues:github && viewItem =~ /^(link)?issue/ && config.githubIssues.useBranchForIssues != on","group":"inline@1"},{"command":"issue.startWorkingBranchDescriptiveTitle","when":"view == issues:github && viewItem =~ /^(link)?issue/ && config.githubIssues.useBranchForIssues == on","group":"inline@1"},{"command":"issue.startWorking","when":"view == issues:github && viewItem =~ /^(link)?continueissue/ && config.githubIssues.useBranchForIssues != on","group":"inline@1"},{"command":"issue.startWorkingBranchDescriptiveTitle","when":"view == issues:github && viewItem =~ /^(link)?continueissue/ && config.githubIssues.useBranchForIssues == on","group":"inline@1"},{"command":"issue.startWorking","alt":"issue.startWorkingBranchPrompt","when":"view == issues:github && viewItem =~ /^(link)?issue/","group":"issues_0@2"},{"command":"issue.continueWorking","when":"view == issues:github && viewItem =~ /^(link)?continueissue/","group":"issues_0@2"},{"command":"pr.create","when":"view == issues:github && viewItem =~ /^(link)?currentissue/","group":"issues_0@2"},{"command":"issue.stopWorking","when":"view == issues:github && viewItem =~ /^(link)?currentissue/","group":"issues_0@3"},{"command":"issue.stopWorking","when":"view == issues:github && viewItem =~ /^(link)?currentissue/ && config.githubIssues.useBranchForIssues != on","group":"inline@1"},{"command":"issue.stopWorkingBranchDescriptiveTitle","when":"view == issues:github && viewItem =~ /^(link)?currentissue/ && config.githubIssues.useBranchForIssues == on","group":"inline@1"},{"command":"issue.copyIssueNumber","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"issues_1@1"},{"command":"issue.copyIssueUrl","when":"view == issues:github && viewItem =~ /^(link)?(current|continue)?issue/","group":"issues_1@2"},{"command":"issue.editQuery","when":"view == issues:github && viewItem == query","group":"inline"},{"command":"issue.editQuery","when":"view == issues:github && viewItem == query"}],"editor/title":[{"command":"review.openFile","group":"navigation","when":"resourceScheme =~ /^review$/ && isInDiffEditor"},{"command":"review.openLocalFile","group":"navigation","when":"resourceScheme =~ /^review$/ && !isInDiffEditor"},{"command":"issue.createIssueFromFile","group":"navigation","when":"resourceFilename == NewIssue.md"},{"command":"pr.markFileAsViewed","group":"navigation","when":"resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:unviewedFiles"},{"command":"pr.unmarkFileAsViewed","group":"navigation","when":"resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:viewedFiles"},{"command":"pr.openDiffViewFromEditor","group":"navigation","when":"!isInDiffEditor && resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:unviewedFiles"},{"command":"pr.openDiffViewFromEditor","group":"navigation","when":"!isInDiffEditor && resourceScheme != pr && resourceScheme != review && resourceScheme != filechange && resourcePath in github:viewedFiles"},{"command":"pr.addFileComment","group":"navigation","when":"(resourceScheme == pr) || (resourcePath in github:viewedFiles) || (resourcePath in github:unviewedFiles)"}],"scm/title":[{"command":"review.suggestDiff","when":"scmProvider =~ /^git|^remoteHub:github/ && scmProviderRootUri in github:reposInReviewMode","group":"inline"},{"command":"pr.create","when":"scmProvider =~ /^git|^remoteHub:github/ && scmProviderRootUri in github:reposNotInReviewMode","group":"navigation"}],"comments/commentThread/context":[{"command":"pr.createComment","group":"inline@1","when":"(commentController =~ /^github-browse/ && prInDraft) || (commentController =~ /^github-review/ && reviewInDraftMode)"},{"command":"pr.createSingleComment","group":"inline@1","when":"config.githubPullRequests.defaultCommentType != review && ((commentController =~ /^github-browse/ && !prInDraft) || (commentController =~ /^github-review/ && !reviewInDraftMode))"},{"command":"pr.startReview","group":"inline@1","when":"config.githubPullRequests.defaultCommentType == review && ((commentController =~ /^github-browse/ && !prInDraft) || (commentController =~ /^github-review/ && !reviewInDraftMode))"},{"command":"pr.startReview","group":"inline@2","when":"config.githubPullRequests.defaultCommentType != review && ((commentController =~ /^github-browse/ && !prInDraft) || (commentController =~ /^github-review/ && !reviewInDraftMode))"},{"command":"pr.createSingleComment","group":"inline@2","when":"config.githubPullRequests.defaultCommentType == review && ((commentController =~ /^github-browse/ && !prInDraft) || commentController =~ /^github-review/ && !reviewInDraftMode)"}],"comments/comment/editorActions":[{"command":"pr.makeSuggestion","group":"inline@3","when":"commentController =~ /^github-(browse|review)/"}],"comments/commentThread/additionalActions":[{"command":"pr.resolveReviewThread","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && commentThread == canResolve"},{"command":"pr.unresolveReviewThread","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && commentThread == canUnresolve"},{"command":"pr.openReview","group":"inline@2","when":"(commentController =~ /^github-browse/ && prInDraft) || (commentController =~ /^github-review/ && reviewInDraftMode)"}],"comments/commentThread/title/context":[{"command":"pr.resolveReviewThread","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && commentThread == canResolve"},{"command":"pr.unresolveReviewThread","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && commentThread == canUnresolve"}],"comments/commentThread/comment/context":[{"command":"pr.resolveReviewThread","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && commentThread == canResolve"},{"command":"pr.unresolveReviewThread","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && commentThread == canUnresolve"}],"comments/comment/title":[{"command":"pr.copyCommentLink","group":"inline@1","when":"commentController =~ /^github-(browse|review)/ && comment =~ /canEdit/"},{"command":"pr.applySuggestion","group":"inline@0","when":"commentController =~ /^github-review/ && comment =~ /hasSuggestion/"},{"command":"pr.editComment","group":"inline@2","when":"commentController =~ /^github-(browse|review)/ && comment =~ /canEdit/"},{"command":"pr.deleteComment","group":"inline@3","when":"commentController =~ /^github-(browse|review)/ && comment =~ /canDelete/"}],"comments/commentThread/title":[{"command":"pr.refreshComments","group":"0_refresh@0","when":"commentController =~ /^github-(browse|review)/"},{"command":"pr.collapseAllComments","group":"1_collapse@0","when":"commentController =~ /^github-(browse|review)/"}],"comments/comment/context":[{"command":"pr.saveComment","group":"inline@1","when":"commentController =~ /^github-(browse|review)/"},{"command":"pr.cancelEditComment","group":"inline@2","when":"commentController =~ /^github-(browse|review)/"}],"editor/context/copy":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes","group":"3_githubPullRequests@0"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes","group":"3_githubPullRequests@1"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes","group":"3_githubPullRequests@2"}],"editor/context/share":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@0"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@1"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@2"},{"command":"issue.copyGithubDevLink","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"file/share":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@0"},{"command":"pr.copyVscodeDevPrLink","when":"github:hasGitHubRemotes && github:inReviewMode && remoteName != codespaces && embedderIdentifier != github.dev","group":"1_githubPullRequests@1"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@2"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@3"},{"command":"issue.copyGithubDevLinkFile","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"editor/lineNumber/context":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes && activeEditor == workbench.editors.files.textFileEditor && config.editor.lineNumbers == on","group":"1_cutcopypaste@3"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes && activeEditor == workbench.editors.files.textFileEditor && config.editor.lineNumbers == on","group":"1_cutcopypaste@4"},{"command":"issue.copyGithubHeadLink","when":"github:hasGitHubRemotes && activeEditor == workbench.editors.files.textFileEditor && config.editor.lineNumbers == on","group":"1_cutcopypaste@5"},{"command":"issue.copyGithubDevLink","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"1_cutcopypaste@0"}],"editor/title/context/share":[{"command":"issue.copyGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@10"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@11"},{"command":"issue.copyGithubHeadLinkWithoutRange","when":"github:hasGitHubRemotes","group":"1_githubPullRequests@12"},{"command":"issue.copyGithubDevLinkWithoutRange","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"explorer/context/share":[{"command":"issue.copyGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"5_githubPulLRequests@10"},{"command":"issue.copyMarkdownGithubPermalinkWithoutRange","when":"github:hasGitHubRemotes","group":"5_githubPulLRequests@11"},{"command":"issue.copyGithubHeadLinkWithoutRange","when":"github:hasGitHubRemotes","group":"5_githubPulLRequests@12"},{"command":"issue.copyGithubDevLinkWithoutRange","when":"github:hasGitHubRemotes && remoteName == codespaces && isWeb || github:hasGitHubRemotes && embedderIdentifier == github.dev","group":"0_vscode@0"}],"menuBar/edit/copy":[{"command":"issue.copyGithubPermalink","when":"github:hasGitHubRemotes"},{"command":"issue.copyMarkdownGithubPermalink","when":"github:hasGitHubRemotes"}],"remoteHub/pullRequest":[{"command":"pr.create","when":"scmProvider =~ /^remoteHub:github/","group":"1_modification@0"}],"webview/context":[{"command":"pr.createPrMenuCreate","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu","group":"0_create@0"},{"command":"pr.createPrMenuDraft","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuDraft","group":"0_create@1"},{"command":"pr.createPrMenuMergeWhenReady","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuMergeWhenReady","group":"1_create@0"},{"command":"pr.createPrMenuMerge","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuMerge","group":"1_create@0"},{"command":"pr.createPrMenuSquash","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuSquash","group":"1_create@1"},{"command":"pr.createPrMenuRebase","when":"webviewId == 'github:createPullRequestWebview' && github:createPrMenu && github:createPrMenuRebase","group":"1_create@2"},{"command":"review.approve","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentApprove"},{"command":"review.comment","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentComment"},{"command":"review.requestChanges","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentRequestChanges"},{"command":"review.approveOnDotCom","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentApproveOnDotCom"},{"command":"review.requestChangesOnDotCom","when":"webviewId == 'github:activePullRequest' && github:reviewCommentMenu && github:reviewCommentRequestChangesOnDotCom"},{"command":"review.approveDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentApprove"},{"command":"review.commentDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentComment"},{"command":"review.requestChangesDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentRequestChanges"},{"command":"review.approveOnDotComDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentApproveOnDotCom"},{"command":"review.requestChangesOnDotComDescription","when":"webviewId == PullRequestOverview && github:reviewCommentMenu && github:reviewCommentRequestChangesOnDotCom"}]},"colors":[{"id":"issues.newIssueDecoration","defaults":{"dark":"#ffffff48","light":"#00000048","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for the assignees and labels fields in a new issue editor."},{"id":"issues.open","defaults":{"dark":"#3FB950","light":"#3FB950","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for indicating that an issue is open."},{"id":"issues.closed","defaults":{"dark":"#cb2431","light":"#cb2431","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for indicating that an issue is closed."},{"id":"pullRequests.merged","defaults":{"dark":"#8957e5","light":"#8957e5","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is merged."},{"id":"pullRequests.draft","defaults":{"dark":"#6e7681","light":"#6e7681","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is a draft."},{"id":"pullRequests.open","defaults":{"dark":"issues.open","light":"issues.open","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is open."},{"id":"pullRequests.closed","defaults":{"dark":"issues.closed","light":"issues.closed","highContrast":"editor.background","highContrastLight":"editor.background"},"description":"The color used for indicating that a pull request is closed."},{"id":"pullRequests.notification","defaults":{"dark":"notificationsInfoIcon.foreground","light":"notificationsInfoIcon.foreground","highContrast":"editor.foreground","highContrastLight":"editor.foreground"},"description":"The color used for indicating a notification on a pull request"}],"resourceLabelFormatters":[{"scheme":"review","formatting":{"label":"${path}","separator":"/","workspaceSuffix":"GitHub","stripPathStartingSeparator":true}}]},"scripts":{"postinstall":"yarn update-dts","bundle":"webpack --mode production --env esbuild","bundle:node":"webpack --mode production --config-name extension:node --config-name webviews","bundle:web":"webpack --mode production --config-name extension:webworker --config-name webviews","clean":"rm -r dist/","compile":"webpack --mode development --env esbuild","compile:test":"tsc -p tsconfig.test.json","compile:node":"webpack --mode development --config-name extension:node --config-name webviews","compile:web":"webpack --mode development --config-name extension:webworker --config-name webviews","lint":"eslint --fix --cache --config .eslintrc.json --ignore-pattern src/env/browser/**/* \"{src,webviews}/**/*.{ts,tsx}\"","lint:browser":"eslint --fix --cache --cache-location .eslintcache.browser --config .eslintrc.browser.json --ignore-pattern src/env/node/**/* \"{src,webviews}/**/*.{ts,tsx}\"","package":"npx vsce package --yarn","pretty":"prettier --config .prettierrc --loglevel warn --write .","test":"yarn run test:preprocess && node ./out/src/test/runTests.js","test:preprocess":"yarn run compile:test && yarn run test:preprocess-gql && yarn run test:preprocess-svg","browsertest:preprocess":"tsc ./src/test/browser/runTests.ts --outDir ./dist/browser/test --rootDir ./src/test/browser --target es6 --module commonjs","browsertest":"yarn run browsertest:preprocess && node ./dist/browser/test/runTests.js","test:preprocess-gql":"node scripts/preprocess-gql --in src/github/queries.gql --out out/src/github/queries.gql && node scripts/preprocess-gql --in src/github/queriesExtra.gql --out out/src/github/queriesExtra.gql && node scripts/preprocess-gql --in src/github/queriesShared.gql --out out/src/github/queriesShared.gql && node scripts/preprocess-gql --in src/github/queriesLimited.gql --out out/src/github/queriesLimited.gql","test:preprocess-svg":"node scripts/preprocess-svg --in ../resources/ --out out/resources","update-dts":"cd \"src/@types\" && npx vscode-dts main && npx vscode-dts dev","watch":"webpack --watch --mode development --env esbuild","watch:web":"webpack --watch --mode development --config-name extension:webworker --config-name webviews","hygiene":"node ./build/hygiene.js","prepare":"husky install"},"devDependencies":{"@types/chai":"^4.1.4","@types/glob":"7.1.3","@types/lru-cache":"^5.1.0","@types/marked":"^0.7.2","@types/mocha":"^8.2.2","@types/node":"12.12.70","@types/react":"^16.8.4","@types/react-dom":"^16.8.2","@types/sinon":"7.0.11","@types/temp":"0.8.34","@types/vscode":"1.79.0","@types/webpack-env":"^1.16.0","@typescript-eslint/eslint-plugin":"6.10.0","@typescript-eslint/parser":"6.10.0","@vscode/test-electron":"^2.3.8","@vscode/test-web":"^0.0.29","assert":"^2.0.0","buffer":"^6.0.3","constants-browserify":"^1.0.0","crypto-browserify":"3.12.0","css-loader":"5.1.3","esbuild-loader":"2.10.0","eslint":"7.22.0","eslint-cli":"1.1.1","eslint-config-prettier":"8.1.0","eslint-plugin-import":"2.22.1","event-stream":"^4.0.1","fork-ts-checker-webpack-plugin":"6.1.1","glob":"7.1.6","graphql":"15.5.0","graphql-tag":"2.11.0","gulp-filter":"^7.0.0","husky":"^8.0.1","jsdom":"19.0.0","jsdom-global":"3.0.2","json5":"2.2.2","merge-options":"3.0.4","minimist":"^1.2.6","mkdirp":"1.0.4","mocha":"^9.0.1","mocha-junit-reporter":"1.23.0","mocha-multi-reporters":"1.1.7","os-browserify":"^0.3.0","p-all":"^1.0.0","path-browserify":"1.0.1","prettier":"2.2.1","process":"^0.11.10","raw-loader":"4.0.2","react-testing-library":"7.0.1","sinon":"9.0.0","source-map-support":"0.5.19","stream-browserify":"^3.0.0","style-loader":"2.0.0","svg-inline-loader":"^0.8.2","temp":"0.9.4","terser-webpack-plugin":"5.1.1","timers-browserify":"^2.0.12","ts-loader":"8.0.18","tty":"1.0.1","typescript":"4.5.5","typescript-formatter":"^7.2.2","vinyl-fs":"^3.0.3","webpack":"5.76.0","webpack-cli":"4.2.0"},"dependencies":{"@octokit/rest":"18.2.1","@octokit/types":"6.10.1","@vscode/extension-telemetry":"0.7.5","apollo-boost":"^0.4.9","apollo-link-context":"1.0.20","cockatiel":"^3.1.1","cross-fetch":"3.1.5","dayjs":"1.10.4","debounce":"^1.2.1","events":"3.2.0","fast-deep-equal":"^3.1.3","lru-cache":"6.0.0","marked":"^4.0.10","react":"^16.12.0","react-dom":"^16.12.0","ssh-config":"4.1.1","tunnel":"0.0.6","url-search-params-polyfill":"^8.1.1","uuid":"8.3.2","vscode-tas-client":"^0.1.75","vsls":"^0.3.967"},"license":"MIT"},"location":{"$mid":1,"path":"/home/neutron/.vscode-oss/extensions/github.vscode-pull-request-github-0.78.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"69ddd764-339a-4ecc-97c1-9c4ece58e36d","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705588174148,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), code formatting, refactoring, unit tests, and more.","version":"2023.22.1","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","saveEditor","terminalDataWriteEvent","terminalExecuteCommandEvent"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.82.0"},"enableTelemetry":false,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Formatters","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugDynamicConfigurations:python","onDebugResolve:python","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.selectInterpreter","title":"Select a Python Interpreter","description":"Choose which Python interpreter/environment you want to use for your Python project.\n[Select Python Interpreter](command:python.setInterpreter)\n**Tip**: Run the ``Python: Select Interpreter`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/python-interpreter.svg","altText":"Selecting a Python interpreter from the status bar"},"when":"workspaceFolderCount == 0"},{"id":"python.createEnvironment","title":"Create a Python Environment ","description":"Create an environment for your Python project.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).\n 🔍 Check out our [docs](https://aka.ms/pythonenvs) to learn more.","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"},"when":"workspaceFolderCount > 0"},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Learn More](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonWelcome2","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"false","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment2","title":"Create or select a Python Environment ","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"markdown":"resources/walkthrough/environments-info.md"},"when":""},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS2","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"show","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"],"tags":["experimental"]},"python.createEnvironment.trigger":{"default":"off","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"],"tags":["experimental"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"machine","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend","pythonRecommendTensorboardExt"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment.","Denotes the Tensorboard Extension recommendation experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string","tags":["experimental"]},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string","markdownDeprecationMessage":"Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.","deprecationMessage":"Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`."},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.debugInTerminal","group":"navigation@1","title":"Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","@vscode/jupyter-lsp-middleware":"^0.2.50","arch":"^2.1.0","fs-extra":"^10.0.1","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^5.0.4","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","untildify":"^4.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^8.2.0","vscode-languageclient":"^9.0.1","vscode-languageserver-protocol":"^3.17.5","vscode-tas-client":"^0.1.75","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^18.17.1","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.11","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.81.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","@vscode/test-electron":"^2.3.4","@vscode/vsce":"^2.18.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.4","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^4.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^13.0.1","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"4.5.5","uuid":"^8.3.2","webpack":"^5.76.0","worker-loader":"^3.0.8","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance"]},"location":{"$mid":1,"path":"/home/neutron/.vscode-oss/extensions/ms-python.python-2023.22.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705588173252,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"catppuccin.catppuccin-vsc","uuid":"69264e4d-cd3b-468a-8f2b-e69673c7d864"},"manifest":{"name":"catppuccin-vsc","license":"MIT","private":true,"displayName":"Catppuccin for VSCode","publisher":"Catppuccin","description":"🦌 Soothing pastel theme for VSCode","version":"3.11.0","engines":{"vscode":"^1.80.0","node":">=20.0.0"},"categories":["Themes"],"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"main":"dist/main.js","browser":"dist/browser.js","contributes":{"themes":[{"label":"Catppuccin Mocha","uiTheme":"vs-dark","path":"./themes/mocha.json"},{"label":"Catppuccin Macchiato","uiTheme":"vs-dark","path":"./themes/macchiato.json"},{"label":"Catppuccin Frappé","uiTheme":"vs-dark","path":"./themes/frappe.json"},{"label":"Catppuccin Latte","uiTheme":"vs","path":"./themes/latte.json"}],"configuration":{"title":"Catppuccin","properties":{"catppuccin.boldKeywords":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use **bold** for keywords."},"catppuccin.italicComments":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use *italics* for comments."},"catppuccin.italicKeywords":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use *italics* for keywords."},"catppuccin.colorOverrides":{"type":"object","default":{},"markdownDescription":"Custom color overrides. Assign your own hex codes to palette colors. See [the docs](https://github.com/catppuccin/vscode#override-palette-colors) for reference.","$ref":"https://cdn.jsdelivr.net/gh/catppuccin/vscode@catppuccin-vsc-v3.11.0/packages/catppuccin-vsc/schemas/colorOverrides.schema.json"},"catppuccin.customUIColors":{"type":"object","default":{},"markdownDescription":"Customize UI colors. Map `workbench.colorCustomizations` to palette colors. See [the docs](https://github.com/catppuccin/vscode#use-palette-colors-on-workbench-elements-ui) for reference.","$ref":"https://cdn.jsdelivr.net/gh/catppuccin/vscode@catppuccin-vsc-v3.11.0/packages/catppuccin-vsc/schemas/customUIColors.schema.json"},"catppuccin.accentColor":{"type":"string","default":"mauve","description":"Controls which accent color to use.","enum":["rosewater","flamingo","pink","mauve","red","maroon","peach","yellow","green","teal","sky","sapphire","blue","lavender"]},"catppuccin.workbenchMode":{"type":"string","default":"default","description":"Controls how the workbench should be styled.","enum":["default","flat","minimal"],"enumDescriptions":["The default look, using 3 shades of the base color.","A more flat look, using 2 shades of the base color.","A minimal look, using 1 shade of the base color."]},"catppuccin.bracketMode":{"type":"string","default":"rainbow","description":"Controls how bracket pairs should be themed","enum":["rainbow","dimmed","monochromatic","neovim"],"enumDescriptions":["Uses 6 rainbow colors for matching bracket pairs.","Uses the same 6 rainbow colors as `rainbow`, but has a dimmed appearance.","A monochromatic, grey appearance for matching bracket pairs.","Uses the same bracket pair colors as our neovim port."]},"catppuccin.extraBordersEnabled":{"type":"boolean","default":false,"description":"Controls whether borders should be enabled on some additional UI elements."}}}},"repository":{"type":"git","url":"git+https://github.com/catppuccin/vscode.git","directory":"packages/catppuccin-vsc"},"bugs":{"url":"https://github.com/catppuccin/vscode/issues"},"sponsor":{"url":"https://opencollective.com/catppuccin"},"icon":"icon.png","devDependencies":{"@actions/core":"^1.10.1","@catppuccin/palette":"^1.0.3","@catppuccin/vsc-typegen":"workspace:*","@types/node":"^20.10.8","@types/tinycolor2":"^1.4.6","@types/vscode":"~1.80.0","@vscode/vsce":"^2.22.0","tinycolor2":"^1.6.0","tsup":"^8.0.1","tsx":"^4.7.0","type-flag":"^3.0.0","typescript":"^5.3.3"},"scripts":{"core:build":"tsx build.ts","core:build-ads":"tsx build.ts --ads","core:dev":"tsx build.ts --dev"}},"location":{"$mid":1,"path":"/home/neutron/.vscode-oss/extensions/catppuccin.catppuccin-vsc-3.11.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"69264e4d-cd3b-468a-8f2b-e69673c7d864","publisherId":"e7d2ed61-53e0-4dd4-afbe-f536c3bb4316","publisherDisplayName":"Catppuccin","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705588183687,"pinned":false,"preRelease":false},"isValid":true,"validations":[]}]}